events{}

http {
  server {
    listen 80;
    server_name ${HOSTNAME};
    rewrite ^(.*) https://$server_name$1 permanent;
  }

  server {
    listen 443 ssl;
    server_name plctestbed.aisec.fraunhofer.de;
    
    include       /etc/nginx/mime.types;
    include ssl-params.conf;


    location / {
      auth_basic "PLC Testbed";
      auth_basic_user_file .htpasswd;
      
      root   /data/www;
    }
  }

  server {
    listen 443 ssl;
    server_name ${HMI_HOSTNAME};
    
    include       /etc/nginx/mime.types;
    include ssl-params.conf;
    location / {
      add_header X-Frame-Options "ALLOW-FROM ${HOSTNAME}";
      add_header Content-Security-Policy "frame-ancestors ${HOSTNAME}";

      auth_basic "PLC Testbed - HMI";
      auth_basic_user_file .htpasswd;

      resolver 127.0.0.11 valid=30s;
      set $upstream_hmi hmi;
      proxy_pass http://$upstream_hmi:1881;
      }
  }

  server {
    listen 443 ssl;
    server_name ${HIST_HOSTNAME};
    
    include       /etc/nginx/mime.types;
    include ssl-params.conf;

    location / {
      add_header X-Frame-Options "ALLOW-FROM ${HOSTNAME}";
      add_header Content-Security-Policy "frame-ancestors ${HOSTNAME}";

      auth_basic "PLC Testbed - Historian";
      auth_basic_user_file .htpasswd;

      resolver 127.0.0.11 valid=30s;
      set $upstream_chronograf chronograf;

      proxy_pass http://$upstream_chronograf:8888;
    }
  }

  server {
    listen 443 ssl;
    server_name ${VIS_HOSTNAME};
    
    include       /etc/nginx/mime.types;
    include ssl-params.conf;

    location / {
      add_header X-Frame-Options "ALLOW-FROM ${HOSTNAME}";
      add_header Content-Security-Policy "frame-ancestors ${HOSTNAME}";

      auth_basic "PLC Testbed - Visualizer";
      auth_basic_user_file .htpasswd;

      resolver 127.0.0.11 valid=30s;
      set $upstream_industrial_process industrial-process;

      proxy_pass http://$upstream_industrial_process:8000;
    }
  }
  
  server {
    listen 443 ssl;
    server_name ${PLC_HOSTNAME};
    
    include       /etc/nginx/mime.types;
    include ssl-params.conf;

    location / {
      add_header X-Frame-Options "ALLOW-FROM ${HOSTNAME}";
      add_header Content-Security-Policy "frame-ancestors ${HOSTNAME}";

      auth_basic "PLC Testbed - OpenPLC";
      auth_basic_user_file .htpasswd;


      resolver 127.0.0.11 valid=30s;
      set $upstream_plc plc;
      proxy_pass http://$upstream_plc:8080;
    }
  }

  server {
    listen 443 ssl;
    server_name ${ATTACKER_HOSTNAME};
    
    include       /etc/nginx/mime.types;
    include ssl-params.conf;

      location / {
      # Basic auth to block unwelcomed access.
      auth_basic "PLC Testbed Attacker";
      auth_basic_user_file .htpasswd;
      
      # To allow us to embedd it as an IFrame inside the overview.
      add_header X-Frame-Options "ALLOW-FROM ${HOSTNAME}";
      add_header Content-Security-Policy "frame-ancestors ${HOSTNAME}";
      
      # This allows us to run nginx without crashing in the case we want to start it without all the other components, e.g. to only host the docs.
      resolver 127.0.0.11 valid=30s;
      set $upstream_shellinabox shellinabox;
      proxy_pass http://$upstream_shellinabox:4200;
    }
  }

  server {
    listen 443 ssl;
    server_name ${DOCS_HOSTNAME};
    
    include       /etc/nginx/mime.types;
    include ssl-params.conf;

    location / {
#       auth_basic "PLC Testbed";
#       auth_basic_user_file .htpasswd;

      root   /data/docs;
    }
  }
}
