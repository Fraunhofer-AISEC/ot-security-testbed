[[inputs.modbus]]
name = "PLC"
slave_id = 1
timeout = "1s"

controller = "tcp://plc:502"

coils = [
    { name = "on_button", address = [0] },
]

input_registers = [
    { name = "max_temp", byte_order = "AB", data_type = "UINT16", scale = 1.0, address = [0] },
    { name = "max_pressure", byte_order = "AB", data_type = "UINT16", scale = 1.0, address = [1] },
    { name = "thermometer", byte_order = "AB", data_type = "UINT16", scale = 1.0, address = [100] },
    { name = "pressure_gauge", byte_order = "AB", data_type = "UINT16", scale = 1.0, address = [101] }
]

discrete_inputs = [
    { name = "level_sensor_low", address = [800] },
    { name = "level_sensor_high", address = [801] }
]

coils = [
    { name = "heater_on", address = [800] },
    { name = "water_on", address = [801] },
    { name = "drain_on", address = [802] }
]


[[inputs.opcua]]
## Metric name
name = "process-opcua"
#
## OPC UA Endpoint URL
endpoint = "opc.tcp://plc:4840"
#
## Maximum time allowed to establish a connect to the endpoint.
connect_timeout = "1s"
#
## Maximum time allowed for a request over the estabilished connection.
request_timeout = "5s"
#
## Security policy, one of "None", "Basic128Rsa15", "Basic256",
## "Basic256Sha256", or "auto"
security_policy = "auto"
#
## Security mode, one of "None", "Sign", "SignAndEncrypt", or "auto"
security_mode = "auto"
#
## Path to cert.pem. Required when security mode or policy isn't "None".
## If cert path is not supplied, self-signed cert and key will be generated.
certificate = "/etc/telegraf/telegraf.cert.pem"
#
## Path to private key.pem. Required when security mode or policy isn't "None".
## If key path is not supplied, self-signed cert and key will be generated.
private_key = "/etc/telegraf/telegraf.key.pem"
#
## Authentication Method, one of "Certificate", "UserName", or "Anonymous".  To
## authenticate using a specific ID, select 'Certificate' or 'UserName'
auth_method = "Certificate"
#
## Username. Required for auth_method = "UserName"
# username = "user1"
#
## Password. Required for auth_method = "UserName"
# password = "password1"
#
## Node ID configuration
## name              - field name to use in the output
## namespace         - OPC UA namespace of the node (integer value 0 thru 3)
## identifier_type   - OPC UA ID type (s=string, i=numeric, g=guid, b=opaque)
## identifier        - OPC UA ID (tag as shown in opcua browser)
## tags              - extra tags to be added to the output metric (optional)
## Example:
nodes = [
    { name = "drain_on", namespace = "1", identifier_type = "s", identifier = "drain_on" },
    { name = "heater_on", namespace = "1", identifier_type = "s", identifier = "heater_on" },
    { name = "on_button", namespace = "1", identifier_type = "s", identifier = "on_button" },
    { name = "thermometer", namespace = "1", identifier_type = "s", identifier = "thermometer" },
    { name = "level_sensor_high", namespace = "1", identifier_type = "s", identifier = "level_sensor_high" },
    { name = "level_sensor_low", namespace = "1", identifier_type = "s", identifier = "level_sensor_low" },
    { name = "pressure_gauge", namespace = "1", identifier_type = "s", identifier = "pressure_gauge" },
    { name = "water_on", namespace = "1", identifier_type = "s", identifier = "water_on" },
    { name = "max_pressure", namespace = "1", identifier_type = "s", identifier = "max_pressure" },
    { name = "max_temp", namespace = "1", identifier_type = "s", identifier = "max_temp" }
]


# nodes = [
#  {name="", namespace="", identifier_type="", identifier=""},
#  {name="", namespace="", identifier_type="", identifier=""},
#]
#
## Node Group
## Sets defaults for OPC UA namespace and ID type so they aren't required in
## every node.  A group can also have a metric name that overrides the main
## plugin metric name.
##
## Multiple node groups are allowed
#[[inputs.opcua.group]]
## Group Metric name. Overrides the top level name.  If unset, the
## top level name is used.
# name =
#
## Group default namespace. If a node in the group doesn't set its
## namespace, this is used.
# namespace =
#
## Group default identifier type. If a node in the group doesn't set its
## namespace, this is used.
# identifier_type =
#
## Node ID Configuration.  Array of nodes with the same settings as above.
# nodes = [
#  {name="", namespace="", identifier_type="", identifier=""},
#  {name="", namespace="", identifier_type="", identifier=""},
#]


# Configuration for sending metrics to InfluxDB
[[outputs.influxdb]]
urls = ["http://influxdb:8086"]

database = "telegraf"


## HTTP Basic Auth
# username = "telegraf"
# password = "metricsmetricsmetricsmetrics"


## Optional TLS Config for use on HTTP connections.
# tls_ca = "/etc/telegraf/ca.pem"
# tls_cert = "/etc/telegraf/cert.pem"
# tls_key = "/etc/telegraf/key.pem"
## Use TLS but skip chain & host verification
# insecure_skip_verify = false

## HTTP Proxy override, if unset values the standard proxy environment
## variables are consulted to determine which proxy, if any, should be used.
# http_proxy = "http://corporate.proxy:3128"

## Additional HTTP headers
# http_headers = {"X-Special-Header" = "Special-Value"}
